class Tools::CheckoutsController < ApplicationController

  def add
    session[:tools]||=[]
    tool = Tool.find_by(barcode: params[:barcode])
    if tool.present? && !session[:tools].include?(tool.id)
      session[:tools].append(tool.id)
    else
      flash.alert = "No tool found with that barcode. #{helpers.link_to 'Create it', new_tool_path, class: 'cta'}"
    end
    redirect_to tools_path
  end

  def remove
    session[:tools].delete(params[:id].to_i)
    redirect_to tools_path
  end

  def participant
    borrower = Participant.find_by_search(params[:participant_search])
    session[:borrower_id] = borrower.id if borrower.present?
    redirect_to tools_path
  end

  def reset
    session[:borrower_id] = nil
    session[:tools] = nil
    redirect_to tools_path
  end
  
  def create
    if params[:checkout][:organization_id].present?
      @organization = Organization.find(params[:checkout][:organization_id])
      return if @organization.blank?

      session[:tools].each do |tool_id|
        begin
          Checkout.create(organization: @organization,
                          participant_id: session[:borrower_id],
                          tool_id: tool_id,
                          checked_out_at: Time.zone.now)
          session[:borrower_id] = nil
          session[:tools] = nil
          flash.notice = "Tools checked out"
        rescue
          flash.alert = "Problem checking out"
        end
      end
      redirect_to tools_path
    end
  end 

  def update
    @tool = Tool.find_by(barcode: params[:barcode])
    @checkout = @tool.checkouts.current.first unless @tool.checkouts.blank? || @tool.checkouts.current.blank?
    raise CheckoutError, I18n.t('errors.messages.tool_already_checked_in') if @checkout.blank?
    @checkout.checked_in_at = Time.zone.now
    @checkout.save!
    redirect_to tools_path, notice: 'Tool successfully checked in.'
  rescue
    redirect_to tools_path, alert: 'Aleady checked in.'
  end
end
